<?php

namespace App\Http\Requests;

use Illuminate\Contracts\Validation\Validator;
use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Validation\ValidationException;

class CommentRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */
    public function authorize()
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array
     */
    public function rules()
    {
        return [
            'comment_email' => 'required|email',
            'comment_name' => 'required',
            'comment_content' => 'required|min:8|max:256',
        ];
    }

    /**
     * Change the autogenerated stub
     */
    public function messages()
    {
        return [
            'comment_email.required' => 'Bạn chưa nhập email',
            'comment_name.required' => 'Bạn chưa nhập tên',
            'comment_content.required' => 'Hãy để lại nội dung comment của bạn',

            'comment_email.email' => 'Email không hợp lệ',
            'comment_content.min' => 'Nội dung quá ngắn, hãy viết nội dung dài hơn 16 ký tự',
            'comment_content.max' => 'Nội dung quá dài, hãy viết nội dung ngắn hơn 256 ký tự',
        ];
    }

    /**
     * Ghi đè hàm này để khi lỗi thì nó chuyển hướng đến trang hiện tại và trỏ id : #comment để người dùng xem luôn.
     *
     * @param Validator $validator
     * @throws ValidationException
     */
    protected function failedValidation(Validator $validator)
    {
        throw (new ValidationException($validator))
            ->errorBag($this->errorBag)
            ->redirectTo($this->getRedirectUrl() . '#comment');
    }
}
